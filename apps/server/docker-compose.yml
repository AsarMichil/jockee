services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: autodj-postgres
    environment:
      POSTGRES_DB: autodj
      POSTGRES_USER: autodj
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U autodj -d autodj"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: autodj-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: autodj-api
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://autodj:password@postgres:5432/autodj
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - AUDIO_STORAGE_PATH=/app/audio
      - SECRET_KEY=your-super-secret-key-change-this-in-production
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - SPOTIFY_REDIRECT_URI=http://localhost:8000/api/v1/auth/spotify/callback
    ports:
      - "8000:8000"
    volumes:
      - audio_data:/app/audio
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: autodj-celery-worker
    command: celery -A app.workers.celery_app worker --loglevel=info --concurrency=2
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://autodj:password@postgres:5432/autodj
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - AUDIO_STORAGE_PATH=/app/audio
      - SECRET_KEY=your-super-secret-key-change-this-in-production
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
    volumes:
      - audio_data:/app/audio
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Celery Beat (for periodic tasks)
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: autodj-celery-beat
    command: celery -A app.workers.celery_app beat --loglevel=info
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://autodj:password@postgres:5432/autodj
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SECRET_KEY=your-super-secret-key-change-this-in-production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Nginx (optional reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: autodj-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  audio_data: 