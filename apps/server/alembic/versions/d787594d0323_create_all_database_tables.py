"""Create all database tables

Revision ID: d787594d0323
Revises: d0d6ed78beeb
Create Date: 2025-05-28 00:11:46.048631

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd787594d0323'
down_revision = 'd0d6ed78beeb'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('analysis_jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('playlist_url', sa.String(), nullable=False),
    sa.Column('playlist_id', sa.String(), nullable=True),
    sa.Column('playlist_name', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='jobstatus'), nullable=True),
    sa.Column('total_tracks', sa.Integer(), nullable=True),
    sa.Column('analyzed_tracks', sa.Integer(), nullable=True),
    sa.Column('downloaded_tracks', sa.Integer(), nullable=True),
    sa.Column('failed_tracks', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_details', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('result', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('options', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_analysis_jobs_status'), 'analysis_jobs', ['status'], unique=False)
    op.create_table('tracks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('spotify_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('artist', sa.String(), nullable=False),
    sa.Column('album', sa.String(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('duration_ms', sa.Float(), nullable=True),
    sa.Column('popularity', sa.Float(), nullable=True),
    sa.Column('preview_url', sa.String(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('file_source', sa.Enum('LOCAL', 'YOUTUBE', 'UNAVAILABLE', name='filesource'), nullable=True),
    sa.Column('file_size', sa.Float(), nullable=True),
    sa.Column('bpm', sa.Float(), nullable=True),
    sa.Column('key', sa.String(), nullable=True),
    sa.Column('energy', sa.Float(), nullable=True),
    sa.Column('danceability', sa.Float(), nullable=True),
    sa.Column('valence', sa.Float(), nullable=True),
    sa.Column('acousticness', sa.Float(), nullable=True),
    sa.Column('instrumentalness', sa.Float(), nullable=True),
    sa.Column('liveness', sa.Float(), nullable=True),
    sa.Column('speechiness', sa.Float(), nullable=True),
    sa.Column('loudness', sa.Float(), nullable=True),
    sa.Column('analysis_version', sa.String(), nullable=True),
    sa.Column('analyzed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('analysis_error', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tracks_spotify_id'), 'tracks', ['spotify_id'], unique=True)
    op.create_table('mix_transitions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('track_a_id', sa.UUID(), nullable=False),
    sa.Column('track_b_id', sa.UUID(), nullable=False),
    sa.Column('transition_start', sa.Float(), nullable=False),
    sa.Column('transition_duration', sa.Float(), nullable=False),
    sa.Column('technique', sa.String(), nullable=True),
    sa.Column('bpm_adjustment', sa.Float(), nullable=True),
    sa.Column('bpm_compatibility', sa.Float(), nullable=True),
    sa.Column('key_compatibility', sa.Float(), nullable=True),
    sa.Column('energy_compatibility', sa.Float(), nullable=True),
    sa.Column('overall_score', sa.Float(), nullable=True),
    sa.Column('mix_metadata', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['analysis_jobs.id'], ),
    sa.ForeignKeyConstraint(['track_a_id'], ['tracks.id'], ),
    sa.ForeignKeyConstraint(['track_b_id'], ['tracks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('mix_transitions')
    op.drop_index(op.f('ix_tracks_spotify_id'), table_name='tracks')
    op.drop_table('tracks')
    op.drop_index(op.f('ix_analysis_jobs_status'), table_name='analysis_jobs')
    op.drop_table('analysis_jobs')
    # ### end Alembic commands ### 